package qacubeHbnFiles;
// Generated Jul 25, 2019 2:13:06 PM by Hibernate Tools 5.2.3.Final

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * TestcaseRequirement generated by hbm2java
 */
@Entity
@Table(name = "TESTCASE_REQUIREMENT", schema = "QACUBE_IMPORT_STAGE", uniqueConstraints = @UniqueConstraint(columnNames = {
		"TESTCASE_ID", "REQUIREMENT_ID" }))
public class TestcaseRequirement implements java.io.Serializable {

	private TestcaseRequirementId id;
	private QTestcaseStatus QTestcaseStatus;
	private Requirement requirement;
	private Testcase testcase;

	public TestcaseRequirement() {
	}

	public TestcaseRequirement(TestcaseRequirementId id, Requirement requirement, Testcase testcase) {
		this.id = id;
		this.requirement = requirement;
		this.testcase = testcase;
	}

	public TestcaseRequirement(TestcaseRequirementId id, QTestcaseStatus QTestcaseStatus, Requirement requirement,
			Testcase testcase) {
		this.id = id;
		this.QTestcaseStatus = QTestcaseStatus;
		this.requirement = requirement;
		this.testcase = testcase;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "testcaseId", column = @Column(name = "TESTCASE_ID", nullable = false, precision = 38, scale = 0)),
			@AttributeOverride(name = "requirementId", column = @Column(name = "REQUIREMENT_ID", nullable = false, precision = 38, scale = 0)),
			@AttributeOverride(name = "testcaseStatusId", column = @Column(name = "TESTCASE_STATUS_ID", precision = 38, scale = 0)),
			@AttributeOverride(name = "weight", column = @Column(name = "WEIGHT", precision = 22, scale = 0)) })
	public TestcaseRequirementId getId() {
		return this.id;
	}

	public void setId(TestcaseRequirementId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TESTCASE_STATUS_ID", insertable = false, updatable = false)
	public QTestcaseStatus getQTestcaseStatus() {
		return this.QTestcaseStatus;
	}

	public void setQTestcaseStatus(QTestcaseStatus QTestcaseStatus) {
		this.QTestcaseStatus = QTestcaseStatus;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "REQUIREMENT_ID", nullable = false, insertable = false, updatable = false)
	public Requirement getRequirement() {
		return this.requirement;
	}

	public void setRequirement(Requirement requirement) {
		this.requirement = requirement;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TESTCASE_ID", nullable = false, insertable = false, updatable = false)
	public Testcase getTestcase() {
		return this.testcase;
	}

	public void setTestcase(Testcase testcase) {
		this.testcase = testcase;
	}

}
